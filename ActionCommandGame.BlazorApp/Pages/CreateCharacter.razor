@page "/createcharacter"
@using ActionCommandGame.Services.Model.Results

@inject IPlayerApi playerApi
@inject NavigationManager navManager
@attribute [Authorize]

<style>
	.page {
		background-image: url(../Images/Background_bar.jpg);
	}
</style>
<div>
	<button @onclick="CharacterSelection">Go back</button>
</div>
<EditForm Model="newPlayer" OnValidSubmit="ValidSubmit">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<ValidationSummary></ValidationSummary>
	<div class="container py-5 h-100">
		<div class="row d-flex justify-content-center align-items-center h-100">
			<div class="col-12 col-md-8 col-lg-6 col-xl-5">
				<div class="card bg-dark text-white" style="border-radius: 1rem;">
					<div class="card-body p-5 text-center">
						<img class="card-img-top smallimg mx-auto" src="../Images/playerFrank Booze.png" alt="Card image cap" style="height: 246px; width: auto; vertical-align: middle;">
						<div class="mb-md-5 mt-md-4 pb-5">

							<h2 class="fw-bold mb-2 text-uppercase">New Character</h2>
							<p class="text-white-50 mb-5">Please choose a name for your character</p>

							<div class="form-outline form-white mb-4">
								<input type="text" class="form-control form-control-lg" @bind="@newPlayer.Name" />
								<label class="form-label">Name</label>
							</div>
							<button class="btn btn-outline-light btn-lg px-5" type="submit">Create</button>

						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</EditForm>


@code
{
	private PlayerResult newPlayer { get; set; } = new PlayerResult();
	private void CharacterSelection()
	{
		navManager.NavigateTo("/characters");
	}

	public async Task ValidSubmit()
	{
		newPlayer.Money = 100;
		await playerApi.Create(newPlayer);
		CharacterSelection();
	}
}
